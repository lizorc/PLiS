{"ast":null,"code":"var _jsxFileName = \"/Users/liz.rodrigues/Documents/GitHub/src/pages/Simulador/resultados.js\";\nimport React from 'react';\nimport styles from './resultados.module.css';\nimport { Link } from \"react-router-dom\"; //import {useState} from 'react'\n//import { render } from '@testing-library/react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Resultados() {\n  const datos = JSON.parse(localStorage.getItem(\"datos\"));\n  console.log(datos);\n  let {\n    value,\n    fee,\n    numQuotas,\n    interestRate\n  } = datos;\n  let interestPayment = 0,\n      capPayment = 0,\n      quota = 0;\n  const cuota = value * (Math.pow(1 + interestRate / 100, numQuotas) * interestRate / 100) / (Math.pow(1 + interestRate / 100, numQuotas) - 1);\n  const months = [...Array(parseInt(numQuotas)).keys()].map((item, key) => {\n    interestPayment = parseFloat(value * (interestRate / 100));\n    capPayment = cuota - interestPayment;\n    value = parseFloat(value - capPayment);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.BoxWhite,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: styles.month,\n        children: [\"Mes \", item + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Valor de la cuota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"$\", cuota.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), \" COP\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Saldo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: value.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  });\n  console.log(months);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formBody,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.tituloResultado,\n      children: \"Resultado de la simulaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.margen,\n      children: months\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.resultField,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"simulador\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.submitButton,\n          type: \"submit\",\n          value: \"Volver\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Resultados;\nexport default Resultados;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resultados\");","map":{"version":3,"sources":["/Users/liz.rodrigues/Documents/GitHub/src/pages/Simulador/resultados.js"],"names":["React","styles","Link","Resultados","datos","JSON","parse","localStorage","getItem","console","log","value","fee","numQuotas","interestRate","interestPayment","capPayment","quota","cuota","Math","pow","months","Array","parseInt","keys","map","item","key","parseFloat","BoxWhite","month","toFixed","formBody","tituloResultado","margen","resultField","submitButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './resultados.module.css'\nimport { Link } from \"react-router-dom\";\n//import {useState} from 'react'\n//import { render } from '@testing-library/react';\nfunction Resultados(){\n\n    const datos = JSON.parse(localStorage.getItem(\"datos\"));\n    console.log(datos);\n    \n    let { value, fee, numQuotas, interestRate } = datos\n\n    let interestPayment=0,capPayment=0,quota=0;\n\n    const cuota = value * (Math.pow(1+interestRate/100,numQuotas)*interestRate/100)/(Math.pow(1+interestRate/100,numQuotas)-1);\n\n    \n    const months = [...Array(parseInt(numQuotas)).keys()].map((item,key)=>{\n    \n        interestPayment = parseFloat(value*(interestRate/100));\n        capPayment = cuota-interestPayment;\n        value = parseFloat(value-capPayment);\n\n        return (\n            <div key={key} className={styles.BoxWhite}>\n                <h4 className={styles.month}>Mes {item+1}</h4>\n                <p> Valor de la cuota</p>\n                <span>\n                    <b>${cuota.toFixed(2)}</b> COP\n                </span>\n                <p>Saldo</p>\n                <span>\n                    {value.toFixed(2)}\n                </span>\n            </div>\n        )\n    })\n\n    console.log(months)\n\n    \n    return (\n        <div className={styles.formBody}>\n            <p className={styles.tituloResultado}>Resultado de la simulaci√≥n</p>\n\n            <div className = {styles.margen}>\n                {months}\n            </div>\n\n            <div className={styles.resultField}>\n            <Link to=\"simulador\"><input className={styles.submitButton} type=\"submit\" value=\"Volver\"/></Link>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Resultados;"]},"metadata":{},"sourceType":"module"}